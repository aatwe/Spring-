Objective: access lifecycle methods using interfaces without configuring in xml file




2 interfaces:

a) Override initializingBean
b) Override DiisposableBean   

a.1) Create bean : class Pepsi
a.2) declare 2 beans in config file: 1 for Samosa 1 for Pepsi
		specify class path, name = beanName
a.3) add init-method and destroy -method in s1 bean of Samosa class

a.4) if want to add want to add methods by config file:
		create 2 methods in Pepsi class
		init-method : method1name
		destory-method : method2name


a.5) How to using interfaces?
	a.5.1)implement interface InitializingBean with Pepsi class
			

	a.5.2) right click -> add unimplemented methods
			afterPropertiesSet() gets added
		 What function of this? this functions as init() method

	a.5.3) implement interface DisposableBean with Pepsi class 
			destroy() gets added
		 What function of this? this functions as destroy() method

	a.5.4) ConclusioN: by using InitilaizingBean and DisposableBean
			knows to: 
			call afterPropertiesSet() on init
			call destroy() on destroy

a.6) .getBean() in Test.java
	
	a.6.1) .getBean() p1 bean of class Pepsi

	a.6.2) if we disable bean s1 in context.java and Test.java
>Output:
		taking pepsi: init						//initialization
		Pepsi [price=5.0]						//work/service
		Going to put bottle back to shop : destroy		//bottle destroy


	a.6.3) else if we have both beans uncommented
																			
>Output:
Setting price									////properties set

Inside init method: hey how are you?					//init

taking pepsi: init					

Samosa [price=10.0]								////service

++++++++++++++++++++++++i+++

Pepsi [price=5.0]

Going to put bottle back to shop : destroy				////destroy
Inside destroy method: bye bye 1 am going to die


>Output:
		<bean c1ass="com.springcore.LifecycLe.Samosa" name="sl"
		init-method="hey" destrob-method="bye">
		<property name="price" value="19" />

		</bean>

		<bean c1ass="com.springcore.LifecycLe.Pepsi" name="p1">
		<property name="price" value="5" />

		</bean>


>Output:
	Setting price

	Inside init method: hey how are you?
	
	taking pepsi: init

	Samosa [price=10.@]

	++++++++++++++++++++++++++++

	Pepsi [price=5.0]

	Going to put bottle back to shop : destroy
	Inside destroy mpthod: bye bye i am going to die


++++++++++++++++++++++++i++++++++++++++++++++++++++++++++++++++++

	Pepsi [price=5.0]
	Going to put bottle back to shop : destroy
	Inside destroy method: bye bye 1 am going to die

	
		
	
public class Pepsi {
	private double price;
 	public double getPrice() {
		return price;
	}
	public void setPrice(double price) {
		this.price = price;
	}
public Pepsi() {
	super();
	// TODO Auto-generated constructor stut
}
@Override
	public String toString() {
		return "- [price=" + price + "]";
	}
}


config.xml

<?xml version="l.0" encoding="UTF-8"?>
I<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2901/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:p="http://www.springframework.org/schema/p"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd">


<bean c1ass="com.springcore.LifecycLe.Samosa" name="sl"
	init-method="hey" destroy-method="bye">
	<property name="price" value="10" />
</bean>


</bean>
<bean c1ass="com.springcore.Lifecycle.Pepsi" name="p1"	>
	<property name: "price " val'ue:'"50 "> </property>
</bean>
</beans>

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Using interfaces  

Pepsi.java

public class Pepsi implements InitilaizingBean,DisposableBean {
	private double price;
 	public double getPrice() {
		return price;
	}
	public void setPrice(double price) {
		this.price = price;
	}
	public Pepsi() {
		super();
	// TODO Auto-generated constructor stut
}
@Override
	public String toString() {
		return "- [price=" + price + "]";
	}
}

public void afterPropertiesSet() throws Exception {
	// TODO Auto-generated method stub
	//init
System.out.println("taking pepsi for drinking: init");

}

public void destroy() throws Exception {
	// TODO Auto-generated method stub
	//destroy 
	System.out.println("putting bottle back to shop after drinking: destroy");

}

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Test.java

package com.springcore.lifecycle;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.AbstractApplicationContext;
import org.springframework.context.support.ClassPatthlApplicationContext;
public class Test {
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		AbstractApplicationContext context=new ClassPatthlApplicationContext("com/springcore.lifecycle")

		Samosa sl=(Samosa) context.getBean("sl");
		System.out.print1n(sl);
		//registering shutdown hook			//activates destroy() 

		context.registerShutdownHook();
	
		System.out.print1n("++++++++++++++++++++++++++++")3
		Pepsi p1 = context.getBean("p1");
}
>
Setting price

Inside init method: hey how are you?

taking pepsi: init

Samosa [price=10.0]

++++++++++++++++++++++++i+++

Pepsi [price=5.0]

Going to put bottle back to shop : destroy
Inside destroy method: bye bye 1 am going to die
